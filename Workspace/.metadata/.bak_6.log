!SESSION 2012-09-19 12:15:53.765 -----------------------------------------------
eclipse.buildId=M20120208-0800
java.version=1.7.0_05
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -data C:\SourceControl\QRef\trunk\Workspace -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\SourceControl\QRef\trunk\Workspace\.metadata\.bak_5.log
Created Time: 2012-09-20 15:33:04.004

!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:04.005
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
				)
		<<<
Document event: offset: 912, length: 1, timestamp: 1108
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:09.099
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if 
				)
		<<<
Document event: offset: 922, length: 1, timestamp: 1114
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:16.483
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback('')
				)
		<<<
Document event: offset: 946, length: 0, timestamp: 1132
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:23.497
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ m'Token not found')
				)
		<<<
Document event: offset: 948, length: 0, timestamp: 1150
text:>m<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:23.654
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ me'Token not found')
				)
		<<<
Document event: offset: 949, length: 0, timestamp: 1151
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:23.890
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ mes'Token not found')
				)
		<<<
Document event: offset: 950, length: 0, timestamp: 1152
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:24.056
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ mess'Token not found')
				)
		<<<
Document event: offset: 951, length: 0, timestamp: 1153
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:24.261
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ messa'Token not found')
				)
		<<<
Document event: offset: 952, length: 0, timestamp: 1154
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:24.364
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ messag'Token not found')
				)
		<<<
Document event: offset: 953, length: 0, timestamp: 1155
text:>g<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:24.555
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ message'Token not found')
				)
		<<<
Document event: offset: 954, length: 0, timestamp: 1156
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:31.968
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ message: 'Token not found' })
						reyur
				)
		<<<
Document event: offset: 990, length: 1, timestamp: 1168
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:32.144
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ message: 'Token not found' })
						reyu
				)
		<<<
Document event: offset: 989, length: 1, timestamp: 1169
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:32.297
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ message: 'Token not found' })
						rey
				)
		<<<
Document event: offset: 988, length: 1, timestamp: 1170
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:32.461
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ message: 'Token not found' })
						re
				)
		<<<
Document event: offset: 987, length: 1, timestamp: 1171
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:34.746
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback({ message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 1006, length: 1, timestamp: 1178
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:39.577
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(n message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 946, length: 0, timestamp: 1180
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:39.766
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(ne message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 947, length: 0, timestamp: 1181
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:39.976
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 948, length: 0, timestamp: 1182
text:>w<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:40.148
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new  message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 949, length: 0, timestamp: 1183
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:40.673
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new E message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 950, length: 0, timestamp: 1184
text:>E<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:40.872
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Er message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 951, length: 0, timestamp: 1185
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:41.059
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Err message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 952, length: 0, timestamp: 1186
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:41.171
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Erro message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 953, length: 0, timestamp: 1187
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:41.270
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 954, length: 0, timestamp: 1188
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:41.941
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error() message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 955, length: 0, timestamp: 1189
text:>()<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:43.856
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error( message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1190
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.040
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(message: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1191
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.202
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(essage: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1192
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.357
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(ssage: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1193
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.514
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(sage: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1194
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.680
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(age: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1195
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.810
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(ge: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1196
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:44.941
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(e: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1197
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:45.104
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error(: 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1198
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:45.270
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error( 'Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1199
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:33:45.410
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found' })
						return
						
					
				)
		<<<
Document event: offset: 956, length: 1, timestamp: 1200
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:08.274
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate(u)
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
						
					
				)
		<<<
Document event: offset: 845, length: 0, timestamp: 1215
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:08.657
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate()
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
						
					
				)
		<<<
Document event: offset: 845, length: 1, timestamp: 1216
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:09.112
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
						
					
				)
		<<<
Document event: offset: 845, length: 0, timestamp: 1217
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:13.756
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
							
					
				)
		<<<
Document event: offset: 1014, length: 0, timestamp: 1222
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:14.020
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
								
					
				)
		<<<
Document event: offset: 1015, length: 0, timestamp: 1223
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:14.242
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
									
					
				)
		<<<
Document event: offset: 1016, length: 0, timestamp: 1224
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:14.516
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
										
					
				)
		<<<
Document event: offset: 1017, length: 0, timestamp: 1225
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:14.775
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
											
					
				)
		<<<
Document event: offset: 1018, length: 0, timestamp: 1226
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:15.101
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
											
					
				)
		<<<
Document event: offset: 1019, length: 0, timestamp: 1227
text:>
					<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:15.646
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@						
					
				)
		<<<
Document event: offset: 1026, length: 0, timestamp: 1228
text:>@<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:16.251
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@u						
					
				)
		<<<
Document event: offset: 1027, length: 0, timestamp: 1229
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:16.290
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@us						
					
				)
		<<<
Document event: offset: 1028, length: 0, timestamp: 1230
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:16.546
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@use						
					
				)
		<<<
Document event: offset: 1029, length: 0, timestamp: 1231
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:16.736
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user						
					
				)
		<<<
Document event: offset: 1030, length: 0, timestamp: 1232
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:16.859
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user 						
					
				)
		<<<
Document event: offset: 1031, length: 0, timestamp: 1233
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:17.132
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user =						
					
				)
		<<<
Document event: offset: 1032, length: 0, timestamp: 1234
text:>=<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:17.321
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = 						
					
				)
		<<<
Document event: offset: 1033, length: 0, timestamp: 1235
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:18.036
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = t						
					
				)
		<<<
Document event: offset: 1034, length: 0, timestamp: 1236
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:18.222
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk						
					
				)
		<<<
Document event: offset: 1035, length: 0, timestamp: 1237
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:18.658
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.						
					
				)
		<<<
Document event: offset: 1036, length: 0, timestamp: 1238
text:>.<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:19.286
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.u						
					
				)
		<<<
Document event: offset: 1037, length: 0, timestamp: 1239
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:19.372
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.us						
					
				)
		<<<
Document event: offset: 1038, length: 0, timestamp: 1240
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:19.647
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.use						
					
				)
		<<<
Document event: offset: 1039, length: 0, timestamp: 1241
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:19.853
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user						
					
				)
		<<<
Document event: offset: 1040, length: 0, timestamp: 1242
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:21.034
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
											
					
				)
		<<<
Document event: offset: 1041, length: 0, timestamp: 1243
text:>
					<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:21.243
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
											
					
				)
		<<<
Document event: offset: 1048, length: 0, timestamp: 1244
text:>
					<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:27.256
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					a						
					
				)
		<<<
Document event: offset: 1055, length: 0, timestamp: 1245
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:27.937
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					as						
					
				)
		<<<
Document event: offset: 1056, length: 0, timestamp: 1246
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:28.122
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					asy						
					
				)
		<<<
Document event: offset: 1057, length: 0, timestamp: 1247
text:>y<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:28.400
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					asyn						
					
				)
		<<<
Document event: offset: 1058, length: 0, timestamp: 1248
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:28.551
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async						
					
				)
		<<<
Document event: offset: 1059, length: 0, timestamp: 1249
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:28.852
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.						
					
				)
		<<<
Document event: offset: 1060, length: 0, timestamp: 1250
text:>.<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:29.459
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.f						
					
				)
		<<<
Document event: offset: 1061, length: 0, timestamp: 1251
text:>f<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:29.616
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.fo						
					
				)
		<<<
Document event: offset: 1062, length: 0, timestamp: 1252
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:29.760
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.for						
					
				)
		<<<
Document event: offset: 1063, length: 0, timestamp: 1253
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:30.380
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forE						
					
				)
		<<<
Document event: offset: 1064, length: 0, timestamp: 1254
text:>E<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:30.737
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEa						
					
				)
		<<<
Document event: offset: 1065, length: 0, timestamp: 1255
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:31.032
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEac						
					
				)
		<<<
Document event: offset: 1066, length: 0, timestamp: 1256
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:31.214
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach						
					
				)
		<<<
Document event: offset: 1067, length: 0, timestamp: 1257
text:>h<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:32.078
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach()						
					
				)
		<<<
Document event: offset: 1068, length: 0, timestamp: 1258
text:>()<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:34.549
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(t)						
					
				)
		<<<
Document event: offset: 1069, length: 0, timestamp: 1259
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:34.721
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk)						
					
				)
		<<<
Document event: offset: 1070, length: 0, timestamp: 1260
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:35.044
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.)						
					
				)
		<<<
Document event: offset: 1071, length: 0, timestamp: 1261
text:>.<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:36.007
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.u)						
					
				)
		<<<
Document event: offset: 1072, length: 0, timestamp: 1262
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:36.170
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.us)						
					
				)
		<<<
Document event: offset: 1073, length: 0, timestamp: 1263
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:36.436
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.use)						
					
				)
		<<<
Document event: offset: 1074, length: 0, timestamp: 1264
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:36.667
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user)						
					
				)
		<<<
Document event: offset: 1075, length: 0, timestamp: 1265
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:36.941
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.)						
					
				)
		<<<
Document event: offset: 1076, length: 0, timestamp: 1266
text:>.<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:37.693
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.r)						
					
				)
		<<<
Document event: offset: 1077, length: 0, timestamp: 1267
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:37.875
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.ro)						
					
				)
		<<<
Document event: offset: 1078, length: 0, timestamp: 1268
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:38.107
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.rol)						
					
				)
		<<<
Document event: offset: 1079, length: 0, timestamp: 1269
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:38.195
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.role)						
					
				)
		<<<
Document event: offset: 1080, length: 0, timestamp: 1270
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:38.441
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles)						
					
				)
		<<<
Document event: offset: 1081, length: 0, timestamp: 1271
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:39.236
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles,)						
					
				)
		<<<
Document event: offset: 1082, length: 0, timestamp: 1272
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:39.435
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, )						
					
				)
		<<<
Document event: offset: 1083, length: 0, timestamp: 1273
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:40.302
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						
					)						
					
				)
		<<<
Document event: offset: 1084, length: 0, timestamp: 1274
text:>
						
					<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:43.326
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(i)
					)						
					
				)
		<<<
Document event: offset: 1093, length: 0, timestamp: 1276
text:>i<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:43.532
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(it)
					)						
					
				)
		<<<
Document event: offset: 1094, length: 0, timestamp: 1277
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:43.649
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(ite)
					)						
					
				)
		<<<
Document event: offset: 1095, length: 0, timestamp: 1278
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:43.887
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item)
					)						
					
				)
		<<<
Document event: offset: 1096, length: 0, timestamp: 1279
text:>m<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:44.265
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item,)
					)						
					
				)
		<<<
Document event: offset: 1097, length: 0, timestamp: 1280
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:44.409
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, )
					)						
					
				)
		<<<
Document event: offset: 1098, length: 0, timestamp: 1281
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:45.644
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, c)
					)						
					
				)
		<<<
Document event: offset: 1099, length: 0, timestamp: 1282
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:45.799
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) ->
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb)
					)						
					
				)
		<<<
Document event: offset: 1100, length: 0, timestamp: 1283
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:53.856
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) >
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
					)						
					
				)
		<<<
Document event: offset: 877, length: 1, timestamp: 1287
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:34:54.280
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthTokens.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
					)						
					
				)
		<<<
Document event: offset: 877, length: 0, timestamp: 1288
text:>=<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:16.872
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Roles.find
					)						
					
				)
		<<<
Document event: offset: 792, length: 1, timestamp: 1303
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:20.108
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.find
					)						
					
				)
		<<<
Document event: offset: 1120, length: 1, timestamp: 1304
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:24.877
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(i)
					)						
					
				)
		<<<
Document event: offset: 1130, length: 0, timestamp: 1310
text:>i<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:25.145
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(it)
					)						
					
				)
		<<<
Document event: offset: 1131, length: 0, timestamp: 1311
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:25.329
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(ite)
					)						
					
				)
		<<<
Document event: offset: 1132, length: 0, timestamp: 1312
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:25.513
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item)
					)						
					
				)
		<<<
Document event: offset: 1133, length: 0, timestamp: 1313
text:>m<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:26.366
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item,)
					)						
					
				)
		<<<
Document event: offset: 1134, length: 0, timestamp: 1314
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:26.704
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, )
					)						
					
				)
		<<<
Document event: offset: 1135, length: 0, timestamp: 1315
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:27.180
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								
							)
					)						
					
				)
		<<<
Document event: offset: 1136, length: 0, timestamp: 1316
text:>
								
							<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:39.195
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(r)
							)
					)						
					
				)
		<<<
Document event: offset: 1147, length: 0, timestamp: 1318
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:40.575
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								()
							)
					)						
					
				)
		<<<
Document event: offset: 1147, length: 1, timestamp: 1319
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:40.861
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(e)
							)
					)						
					
				)
		<<<
Document event: offset: 1147, length: 0, timestamp: 1320
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:41.092
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(er)
							)
					)						
					
				)
		<<<
Document event: offset: 1148, length: 0, timestamp: 1321
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:41.245
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err)
							)
					)						
					
				)
		<<<
Document event: offset: 1149, length: 0, timestamp: 1322
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:41.457
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err,)
							)
					)						
					
				)
		<<<
Document event: offset: 1150, length: 0, timestamp: 1323
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:41.689
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, )
							)
					)						
					
				)
		<<<
Document event: offset: 1151, length: 0, timestamp: 1324
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:41.851
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, r)
							)
					)						
					
				)
		<<<
Document event: offset: 1152, length: 0, timestamp: 1325
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:42.267
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, ro)
							)
					)						
					
				)
		<<<
Document event: offset: 1153, length: 0, timestamp: 1326
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:42.676
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, rol)
							)
					)						
					
				)
		<<<
Document event: offset: 1154, length: 0, timestamp: 1327
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:42.730
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role)
							)
					)						
					
				)
		<<<
Document event: offset: 1155, length: 0, timestamp: 1328
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:51.966
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										c
							)
					)						
					
				)
		<<<
Document event: offset: 1191, length: 1, timestamp: 1343
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:53.020
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(e)
							)
					)						
					
				)
		<<<
Document event: offset: 1193, length: 0, timestamp: 1346
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:53.281
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(er)
							)
					)						
					
				)
		<<<
Document event: offset: 1194, length: 0, timestamp: 1347
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:53.463
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
							)
					)						
					
				)
		<<<
Document event: offset: 1195, length: 0, timestamp: 1348
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:56.301
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
							)
					)						
					
				)
		<<<
Document event: offset: 1226, length: 1, timestamp: 1357
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:59.775
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if nt
							)
					)						
					
				)
		<<<
Document event: offset: 1242, length: 1, timestamp: 1365
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:35:59.925
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if n
							)
					)						
					
				)
		<<<
Document event: offset: 1241, length: 1, timestamp: 1366
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:05.175
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(n)
							)
					)						
					
				)
		<<<
Document event: offset: 1264, length: 0, timestamp: 1379
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:05.312
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(ne)
							)
					)						
					
				)
		<<<
Document event: offset: 1265, length: 0, timestamp: 1380
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:05.528
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new)
							)
					)						
					
				)
		<<<
Document event: offset: 1266, length: 0, timestamp: 1381
text:>w<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:05.653
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new )
							)
					)						
					
				)
		<<<
Document event: offset: 1267, length: 0, timestamp: 1382
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:06.167
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new E)
							)
					)						
					
				)
		<<<
Document event: offset: 1268, length: 0, timestamp: 1383
text:>E<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:06.454
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Er)
							)
					)						
					
				)
		<<<
Document event: offset: 1269, length: 0, timestamp: 1384
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:06.663
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Err)
							)
					)						
					
				)
		<<<
Document event: offset: 1270, length: 0, timestamp: 1385
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:06.761
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Erro)
							)
					)						
					
				)
		<<<
Document event: offset: 1271, length: 0, timestamp: 1386
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:06.871
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error)
							)
					)						
					
				)
		<<<
Document event: offset: 1272, length: 0, timestamp: 1387
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:07.510
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error())
							)
					)						
					
				)
		<<<
Document event: offset: 1273, length: 0, timestamp: 1388
text:>()<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:08.286
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error(''))
							)
					)						
					
				)
		<<<
Document event: offset: 1274, length: 0, timestamp: 1389
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:13.020
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										
							)
					)						
					
				)
		<<<
Document event: offset: 1304, length: 1, timestamp: 1406
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:14.744
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									
							)
					)						
					
				)
		<<<
Document event: offset: 1333, length: 1, timestamp: 1415
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:21.058
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(r)
							)
					)						
					
				)
		<<<
Document event: offset: 1345, length: 0, timestamp: 1428
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:21.321
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(ro)
							)
					)						
					
				)
		<<<
Document event: offset: 1346, length: 0, timestamp: 1429
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:21.561
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(rol)
							)
					)						
					
				)
		<<<
Document event: offset: 1347, length: 0, timestamp: 1430
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:21.702
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role)
							)
					)						
					
				)
		<<<
Document event: offset: 1348, length: 0, timestamp: 1431
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:22.537
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.)
							)
					)						
					
				)
		<<<
Document event: offset: 1349, length: 0, timestamp: 1432
text:>.<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:24.283
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.r)
							)
					)						
					
				)
		<<<
Document event: offset: 1350, length: 0, timestamp: 1433
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:24.472
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.ro)
							)
					)						
					
				)
		<<<
Document event: offset: 1351, length: 0, timestamp: 1434
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:24.694
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.rol)
							)
					)						
					
				)
		<<<
Document event: offset: 1352, length: 0, timestamp: 1435
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:24.757
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.role)
							)
					)						
					
				)
		<<<
Document event: offset: 1353, length: 0, timestamp: 1436
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:25.221
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleN)
							)
					)						
					
				)
		<<<
Document event: offset: 1354, length: 0, timestamp: 1437
text:>N<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:25.403
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleNa)
							)
					)						
					
				)
		<<<
Document event: offset: 1355, length: 0, timestamp: 1438
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:25.539
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleNam)
							)
					)						
					
				)
		<<<
Document event: offset: 1356, length: 0, timestamp: 1439
text:>m<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:25.703
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
							)
					)						
					
				)
		<<<
Document event: offset: 1357, length: 0, timestamp: 1440
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:33.366
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(n)
							)
					)						
					
				)
		<<<
Document event: offset: 1373, length: 0, timestamp: 1445
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:33.627
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(nu)
							)
					)						
					
				)
		<<<
Document event: offset: 1374, length: 0, timestamp: 1446
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:33.851
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(nul)
							)
					)						
					
				)
		<<<
Document event: offset: 1375, length: 0, timestamp: 1447
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:33.999
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
					)						
					
				)
		<<<
Document event: offset: 1376, length: 0, timestamp: 1448
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:38.501
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						
					)						
					
				)
		<<<
Document event: offset: 1396, length: 1, timestamp: 1450
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:41.698
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(e)
					)						
					
				)
		<<<
Document event: offset: 1398, length: 0, timestamp: 1453
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:41.942
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(er)
					)						
					
				)
		<<<
Document event: offset: 1399, length: 0, timestamp: 1454
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:42.098
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err)
					)						
					
				)
		<<<
Document event: offset: 1400, length: 0, timestamp: 1455
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:49.976
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								call
					)						
					
				)
		<<<
Document event: offset: 1435, length: 1, timestamp: 1473
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:51.350
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callba
					)						
					
				)
		<<<
Document event: offset: 1437, length: 1, timestamp: 1477
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:52.796
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(e)
					)						
					
				)
		<<<
Document event: offset: 1440, length: 0, timestamp: 1481
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:53.101
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(er)
					)						
					
				)
		<<<
Document event: offset: 1441, length: 0, timestamp: 1482
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:53.237
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
					)						
					
				)
		<<<
Document event: offset: 1442, length: 0, timestamp: 1483
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:56.314
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							
					)						
					
				)
		<<<
Document event: offset: 1479, length: 1, timestamp: 1493
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:58.868
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(n)
					)						
					
				)
		<<<
Document event: offset: 1488, length: 0, timestamp: 1503
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:59.110
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(nu)
					)						
					
				)
		<<<
Document event: offset: 1489, length: 0, timestamp: 1504
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:59.298
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(nul)
					)						
					
				)
		<<<
Document event: offset: 1490, length: 0, timestamp: 1505
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:36:59.455
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 1491, length: 0, timestamp: 1506
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:19.199
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
			
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 774, length: 0, timestamp: 1507
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:19.554
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
				
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 775, length: 0, timestamp: 1508
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:20.209
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 776, length: 0, timestamp: 1509
text:>@<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:20.651
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@r		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 777, length: 0, timestamp: 1510
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:20.855
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@ro		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 778, length: 0, timestamp: 1511
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:21.077
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@rol		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 779, length: 0, timestamp: 1512
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:21.137
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@role		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 780, length: 0, timestamp: 1513
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:21.355
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 781, length: 0, timestamp: 1514
text:>s<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:21.458
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles 		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 782, length: 0, timestamp: 1515
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:21.790
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles =		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 783, length: 0, timestamp: 1516
text:>=<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:21.996
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = 		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 784, length: 0, timestamp: 1517
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:22.409
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles =		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 784, length: 1, timestamp: 1518
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:22.845
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = 		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 784, length: 0, timestamp: 1519
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:23.063
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 785, length: 0, timestamp: 1520
text:>[]<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:23.187
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 786, length: 1, timestamp: 1521
text:>]<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:37:59.298
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: ()
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 729, length: 1, timestamp: 1534
text:>)<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:38:05.239
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUserL
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 751, length: 1, timestamp: 1555
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:38:05.389
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 750, length: 1, timestamp: 1556
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:38:07.170
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: []
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: ()
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 753, length: 1, timestamp: 1560
text:>)<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:40:10.597
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: [
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 160, length: 1, timestamp: 1570
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:40:10.875
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: 
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 159, length: 1, timestamp: 1571
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:43:07.664
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>crypto = require('crypto')
mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
ObjectId = mongoose.Types.ObjectId
Dictionary = require('../collections/Dictionary')
###
Secure utility methods for managing users, credentials, and tokens.
@author Nathan Klick
@copyright QRef 2012
###
class UserAuth 
	###
	Creates a new UserAuth object instance.
	###
	constructor: () ->
	###
	Generates a random salt.
	@return [String] A hexadecimal string representing a SHA-512 hash.
	###
	salt: () -> 
		hash = crypto.createHash('sha512')
		hash.update(crypto.randomBytes(1024))
		hash.digest('hex')
	###
	Performs an HMAC transformation on a password using a given key and salt values.
	@param key [String] The key to use with the HMAC algorithm.
	@param salt [String] A hexadecimal string representing a SHA-512 salt value.
	@param password [String] The clear text password to be encoded.
	@return [String] A hexadecimal string representing a secure SHA-512 HMAC representation of the clear text password.
	###
	securePassword: (key, salt, password) ->
		sKey = key + salt
		hmac = crypto.createHmac('sha512', sKey)
		hmac.update(password)
		hmac.digest('hex')
	###
	Generates a random secure token using the given key and salt values.
	@param key [String] The key to use with the HMAC algorithm.
	@param salt [String] A hexadecimal string representing a SHA-512 salt value.
	@return [String] A hexadecimal string representing a secure random token.
	###
	secureToken: (key, salt) ->
		sPassword = '' + Date.now() + crypto.randomBytes(64)
		@.securePassword(key, salt, sPassword)
	###
	Validates a given userName and password against the database.
	@param userName [String] The username to validate.
	@param password [String] The clear text password to validate.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateCredential: (userName, password, callback) ->
		db = QRefDatabase.instance()
		db.User.where('userName')
				.equals(userName)
				.findOne((err, user) => 
					if err? 
						callback(err, false)
					if user?
						pwHash = @.securePassword(user._id, user.passwordSalt, password)
						callback(null, pwHash == user.passwordHash)
					else
						callback(null, false)
				)
	###
	Validate a secure token against the database records.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					 .equals(token)
					 .findOne((err, obj) =>
					 	if err?
					 		callback(err, false)
					 		return
					 	if obj?
					 		callback(null, Date.now() < obj.expiresOn)
					 	else
					 		callback(null, false)
					 )
	###
	Validates a set of user credentials against the database and issues a valid token if the credentials are valid.
	@param userName [String] The username to validate.
	@param password [String] The clear text password to validate.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthLoginCallback} method.
	###
	login: (userName, password, callback) ->
		db = QRefDatabase.instance()
	
			
		db.User.where('userName')
				.equals(userName)
				.findOne((err, user) =>
					if err?
						callback(err, null, false)
						return
					if user?
						pwHash = @.securePassword(user._id, user.passwordSalt, password)
						
						if pwHash == user.passwordHash
							expiry = new Date()
							expiry.setHours(expiry.getHours() + 336)
							tk = new db.AuthToken()
							tk.token = @.secureToken(user._id, user.passwordSalt)
							tk.expiresOn = expiry
							tk.user = user
							tk.save((error) ->
								if error?
									callback(error, null, false)
								else
									callback(null, tk.token, true)
							) 
						else
							callback(null, null, false)
					else
						callback(null, null, false)
		)
	###
	A helper method user to extract a token from the Authorization HTTP header and pass it to the {#validateToken} method.
	@param req [Express.Request] The HTTP request object.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateRequest: (req, callback) ->
		@.validateToken(req.header('Authorization'), callback)
	###
	Validates and extends the life of an existing secure token.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	refreshToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					 .equals(token)
					 .findOne((err, obj) ->
					 	if err?
					 		callback(err, false)
					 		return
					 	if obj?
					 		if Date.now() < obj.expiresOn
					 			expiry = new Date()
					 			expiry.setHours(expiry.getHours() + 336)
					 			obj.expiresOn =  expiry
					 			obj.save((error) ->
					 				if error?
					 					callback(error, false)
					 				else
					 					callback(null, true) 
					 			)
					 		else
					 			callback(null, false)
					 	else
					 		callback(null, false)
					 )
	###
	Creates a new user account with no roles.
	@param userName [String] The userName to create. This should always be the email address of the user.
	@param password [String] The clear text password provided by the user.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthCreateAccountCallback} method.
	###
	createAccount: (userName, password, callback) ->
		db = QRefDatabase.instance()
		userSalt = @.salt()
		userGuid = new ObjectId()
		userHash = @.securePassword(userGuid, userSalt, password)
		
		db.Roles.where('roleName')
				.equals('Users')
				.findOne((err, role) ->
					
					if err?
						callback(err, false, 4)
						return
					
					if not role?
						callback(err, false, 5)
						return
					
					user = new db.User()
					user._id = userGuid
					user.passwordSalt = userSalt
					user.passwordHash = userHash
					user.emailAddress = userName
					user.userName = userName
					user.roles.push(role._id)
					
					db.User.where('userName')
						.equals(userName)
						.find((err, arrObjs) ->
							if err?
								callback(err, false, 1)
								return
							if arrObjs? and arrObjs.length > 0
								callback(null, false, 2)
								return
							else
								user.save((err) ->
									if err?
										callback(err, false, 3)
									else
										callback(null, true, 0)
								)
							
						)
				)
		
	###
	Retrieves the associate user account for a secure token.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthUserFromTokenCallback} method.
	###
	userFromToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) ->
						
						if err?
							callback(err, null)
							return
						if not tk?
							callback(true, null)
							return
						
						callback(null, tk.user)
			
					)
	###
	Determines if the currently authenticated user is in the given role.
	@param token [String] A hexadecimal string representing a secure token.
	@param roleName [String] The name of the role. 
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthIsInRoleCallback} method.
	###
	isInRole: (token, roleName, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) -> 
						
						if err?
							callback(err, false);
							return
							
						if not tk?
							callback(null, false);	
							return
						
						db.Role.where('roleName')
							.equals(roleName)
							.findOne((err, role) ->
								if err?
									callback(err, false)
									return
								
								if not role?
									callback(null, false)
									return
								
								bFound = false
								
								async.forEach(tk.user.roles, 
									(item, cb) ->
										if item.toString() == role._id.toString()
											bFound = true
										cb(null)
									, (err) ->
										callback(null, bFound)
								)
							)
					)
	###
	Determines if the currently authenticated user is in any of the listed roles.
	@param token [String] A hexadecimal string representing a secure token.
	@param roles [Array<String>] The array of roles for which to check for membership.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthIsInRoleCallback} method.
	###
	isInAnyRole: (token, roles, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) -> 
						
						if err?
							callback(err, false);
							return
							
						if not tk?
							callback(null, false);	
							return
							
						arrQueryEntries = []
						
						arrQueryEntries.push({ roleName: r }) for r in roles
						
						db.Role.find({ "$or": arrQueryEntries })
							.exec((err, arrRoles) ->
								if err?
									callback(err, false)
									return
								
								if arrRoles.length == 0
									callback(null, false)
									return
								
								bFound = false
								dctRoleKeys = new Dictionary()
								
								dctRoleKeys.set(r._id.toString(), r.roleName) for r in arrRoles
								
								
								async.forEach(tk.user.roles, 
									(item, cb) ->
										if dctRoleKeys.containsKey(item.toString())
											bFound = true
										cb(null)
									, (err) ->
										callback(e, bFound)
								)
							)
					)
module.exports = new UserAuth()<<<
Document event: offset: 10128, length: 4, timestamp: 1662
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:43:07.936
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>crypto = require('crypto')
mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
ObjectId = mongoose.Types.ObjectId
Dictionary = require('../collections/Dictionary')
###
Secure utility methods for managing users, credentials, and tokens.
@author Nathan Klick
@copyright QRef 2012
###
class UserAuth 
	###
	Creates a new UserAuth object instance.
	###
	constructor: () ->
	###
	Generates a random salt.
	@return [String] A hexadecimal string representing a SHA-512 hash.
	###
	salt: () -> 
		hash = crypto.createHash('sha512')
		hash.update(crypto.randomBytes(1024))
		hash.digest('hex')
	###
	Performs an HMAC transformation on a password using a given key and salt values.
	@param key [String] The key to use with the HMAC algorithm.
	@param salt [String] A hexadecimal string representing a SHA-512 salt value.
	@param password [String] The clear text password to be encoded.
	@return [String] A hexadecimal string representing a secure SHA-512 HMAC representation of the clear text password.
	###
	securePassword: (key, salt, password) ->
		sKey = key + salt
		hmac = crypto.createHmac('sha512', sKey)
		hmac.update(password)
		hmac.digest('hex')
	###
	Generates a random secure token using the given key and salt values.
	@param key [String] The key to use with the HMAC algorithm.
	@param salt [String] A hexadecimal string representing a SHA-512 salt value.
	@return [String] A hexadecimal string representing a secure random token.
	###
	secureToken: (key, salt) ->
		sPassword = '' + Date.now() + crypto.randomBytes(64)
		@.securePassword(key, salt, sPassword)
	###
	Validates a given userName and password against the database.
	@param userName [String] The username to validate.
	@param password [String] The clear text password to validate.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateCredential: (userName, password, callback) ->
		db = QRefDatabase.instance()
		db.User.where('userName')
				.equals(userName)
				.findOne((err, user) => 
					if err? 
						callback(err, false)
					if user?
						pwHash = @.securePassword(user._id, user.passwordSalt, password)
						callback(null, pwHash == user.passwordHash)
					else
						callback(null, false)
				)
	###
	Validate a secure token against the database records.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					 .equals(token)
					 .findOne((err, obj) =>
					 	if err?
					 		callback(err, false)
					 		return
					 	if obj?
					 		callback(null, Date.now() < obj.expiresOn)
					 	else
					 		callback(null, false)
					 )
	###
	Validates a set of user credentials against the database and issues a valid token if the credentials are valid.
	@param userName [String] The username to validate.
	@param password [String] The clear text password to validate.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthLoginCallback} method.
	###
	login: (userName, password, callback) ->
		db = QRefDatabase.instance()
	
			
		db.User.where('userName')
				.equals(userName)
				.findOne((err, user) =>
					if err?
						callback(err, null, false)
						return
					if user?
						pwHash = @.securePassword(user._id, user.passwordSalt, password)
						
						if pwHash == user.passwordHash
							expiry = new Date()
							expiry.setHours(expiry.getHours() + 336)
							tk = new db.AuthToken()
							tk.token = @.secureToken(user._id, user.passwordSalt)
							tk.expiresOn = expiry
							tk.user = user
							tk.save((error) ->
								if error?
									callback(error, null, false)
								else
									callback(null, tk.token, true)
							) 
						else
							callback(null, null, false)
					else
						callback(null, null, false)
		)
	###
	A helper method user to extract a token from the Authorization HTTP header and pass it to the {#validateToken} method.
	@param req [Express.Request] The HTTP request object.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateRequest: (req, callback) ->
		@.validateToken(req.header('Authorization'), callback)
	###
	Validates and extends the life of an existing secure token.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	refreshToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					 .equals(token)
					 .findOne((err, obj) ->
					 	if err?
					 		callback(err, false)
					 		return
					 	if obj?
					 		if Date.now() < obj.expiresOn
					 			expiry = new Date()
					 			expiry.setHours(expiry.getHours() + 336)
					 			obj.expiresOn =  expiry
					 			obj.save((error) ->
					 				if error?
					 					callback(error, false)
					 				else
					 					callback(null, true) 
					 			)
					 		else
					 			callback(null, false)
					 	else
					 		callback(null, false)
					 )
	###
	Creates a new user account with no roles.
	@param userName [String] The userName to create. This should always be the email address of the user.
	@param password [String] The clear text password provided by the user.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthCreateAccountCallback} method.
	###
	createAccount: (userName, password, callback) ->
		db = QRefDatabase.instance()
		userSalt = @.salt()
		userGuid = new ObjectId()
		userHash = @.securePassword(userGuid, userSalt, password)
		
		db.Roles.where('roleName')
				.equals('Users')
				.findOne((err, role) ->
					
					if err?
						callback(err, false, 4)
						return
					
					if not role?
						callback(err, false, 5)
						return
					
					user = new db.User()
					user._id = userGuid
					user.passwordSalt = userSalt
					user.passwordHash = userHash
					user.emailAddress = userName
					user.userName = userName
					user.roles.push(role._id)
					
					db.User.where('userName')
						.equals(userName)
						.find((err, arrObjs) ->
							if err?
								callback(err, false, 1)
								return
							if arrObjs? and arrObjs.length > 0
								callback(null, false, 2)
								return
							else
								user.save((err) ->
									if err?
										callback(err, false, 3)
									else
										callback(null, true, 0)
								)
							
						)
				)
		
	###
	Retrieves the associate user account for a secure token.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthUserFromTokenCallback} method.
	###
	userFromToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) ->
						
						if err?
							callback(err, null)
							return
						if not tk?
							callback(true, null)
							return
						
						callback(null, tk.user)
			
					)
	###
	Determines if the currently authenticated user is in the given role.
	@param token [String] A hexadecimal string representing a secure token.
	@param roleName [String] The name of the role. 
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthIsInRoleCallback} method.
	###
	isInRole: (token, roleName, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) -> 
						
						if err?
							callback(err, false);
							return
							
						if not tk?
							callback(null, false);	
							return
						
						db.Role.where('roleName')
							.equals(roleName)
							.findOne((err, role) ->
								if err?
									callback(err, false)
									return
								
								if not role?
									callback(null, false)
									return
								
								bFound = false
								
								async.forEach(tk.user.roles, 
									(item, cb) ->
										if item.toString() == role._id.toString()
											bFound = true
										cb(null)
									, (err) ->
										callback(null, bFound)
								)
							)
					)
	###
	Determines if the currently authenticated user is in any of the listed roles.
	@param token [String] A hexadecimal string representing a secure token.
	@param roles [Array<String>] The array of roles for which to check for membership.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthIsInRoleCallback} method.
	###
	isInAnyRole: (token, roles, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) -> 
						
						if err?
							callback(err, false);
							return
							
						if not tk?
							callback(null, false);	
							return
							
						arrQueryEntries = []
						
						arrQueryEntries.push({ roleName: r }) for r in roles
						
						db.Role.find({ "$or": arrQueryEntries })
							.exec((err, arrRoles) ->
								if err?
									callback(err, false)
									return
								
								if arrRoles.length == 0
									callback(null, false)
									return
								
								bFound = false
								dctRoleKeys = new Dictionary()
								
								dctRoleKeys.set(r._id.toString(), r.roleName) for r in arrRoles
								
								
								async.forEach(tk.user.roles, 
									(item, cb) ->
										if dctRoleKeys.containsKey(item.toString())
											bFound = true
										cb(null)
									, (err) ->
										callback(er, bFound)
								)
							)
					)
module.exports = new UserAuth()<<<
Document event: offset: 10129, length: 0, timestamp: 1663
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:43:08.109
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>crypto = require('crypto')
mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
ObjectId = mongoose.Types.ObjectId
Dictionary = require('../collections/Dictionary')
###
Secure utility methods for managing users, credentials, and tokens.
@author Nathan Klick
@copyright QRef 2012
###
class UserAuth 
	###
	Creates a new UserAuth object instance.
	###
	constructor: () ->
	###
	Generates a random salt.
	@return [String] A hexadecimal string representing a SHA-512 hash.
	###
	salt: () -> 
		hash = crypto.createHash('sha512')
		hash.update(crypto.randomBytes(1024))
		hash.digest('hex')
	###
	Performs an HMAC transformation on a password using a given key and salt values.
	@param key [String] The key to use with the HMAC algorithm.
	@param salt [String] A hexadecimal string representing a SHA-512 salt value.
	@param password [String] The clear text password to be encoded.
	@return [String] A hexadecimal string representing a secure SHA-512 HMAC representation of the clear text password.
	###
	securePassword: (key, salt, password) ->
		sKey = key + salt
		hmac = crypto.createHmac('sha512', sKey)
		hmac.update(password)
		hmac.digest('hex')
	###
	Generates a random secure token using the given key and salt values.
	@param key [String] The key to use with the HMAC algorithm.
	@param salt [String] A hexadecimal string representing a SHA-512 salt value.
	@return [String] A hexadecimal string representing a secure random token.
	###
	secureToken: (key, salt) ->
		sPassword = '' + Date.now() + crypto.randomBytes(64)
		@.securePassword(key, salt, sPassword)
	###
	Validates a given userName and password against the database.
	@param userName [String] The username to validate.
	@param password [String] The clear text password to validate.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateCredential: (userName, password, callback) ->
		db = QRefDatabase.instance()
		db.User.where('userName')
				.equals(userName)
				.findOne((err, user) => 
					if err? 
						callback(err, false)
					if user?
						pwHash = @.securePassword(user._id, user.passwordSalt, password)
						callback(null, pwHash == user.passwordHash)
					else
						callback(null, false)
				)
	###
	Validate a secure token against the database records.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					 .equals(token)
					 .findOne((err, obj) =>
					 	if err?
					 		callback(err, false)
					 		return
					 	if obj?
					 		callback(null, Date.now() < obj.expiresOn)
					 	else
					 		callback(null, false)
					 )
	###
	Validates a set of user credentials against the database and issues a valid token if the credentials are valid.
	@param userName [String] The username to validate.
	@param password [String] The clear text password to validate.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthLoginCallback} method.
	###
	login: (userName, password, callback) ->
		db = QRefDatabase.instance()
	
			
		db.User.where('userName')
				.equals(userName)
				.findOne((err, user) =>
					if err?
						callback(err, null, false)
						return
					if user?
						pwHash = @.securePassword(user._id, user.passwordSalt, password)
						
						if pwHash == user.passwordHash
							expiry = new Date()
							expiry.setHours(expiry.getHours() + 336)
							tk = new db.AuthToken()
							tk.token = @.secureToken(user._id, user.passwordSalt)
							tk.expiresOn = expiry
							tk.user = user
							tk.save((error) ->
								if error?
									callback(error, null, false)
								else
									callback(null, tk.token, true)
							) 
						else
							callback(null, null, false)
					else
						callback(null, null, false)
		)
	###
	A helper method user to extract a token from the Authorization HTTP header and pass it to the {#validateToken} method.
	@param req [Express.Request] The HTTP request object.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	validateRequest: (req, callback) ->
		@.validateToken(req.header('Authorization'), callback)
	###
	Validates and extends the life of an existing secure token.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthValidateCredentialCallback} method.
	###
	refreshToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					 .equals(token)
					 .findOne((err, obj) ->
					 	if err?
					 		callback(err, false)
					 		return
					 	if obj?
					 		if Date.now() < obj.expiresOn
					 			expiry = new Date()
					 			expiry.setHours(expiry.getHours() + 336)
					 			obj.expiresOn =  expiry
					 			obj.save((error) ->
					 				if error?
					 					callback(error, false)
					 				else
					 					callback(null, true) 
					 			)
					 		else
					 			callback(null, false)
					 	else
					 		callback(null, false)
					 )
	###
	Creates a new user account with no roles.
	@param userName [String] The userName to create. This should always be the email address of the user.
	@param password [String] The clear text password provided by the user.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthCreateAccountCallback} method.
	###
	createAccount: (userName, password, callback) ->
		db = QRefDatabase.instance()
		userSalt = @.salt()
		userGuid = new ObjectId()
		userHash = @.securePassword(userGuid, userSalt, password)
		
		db.Roles.where('roleName')
				.equals('Users')
				.findOne((err, role) ->
					
					if err?
						callback(err, false, 4)
						return
					
					if not role?
						callback(err, false, 5)
						return
					
					user = new db.User()
					user._id = userGuid
					user.passwordSalt = userSalt
					user.passwordHash = userHash
					user.emailAddress = userName
					user.userName = userName
					user.roles.push(role._id)
					
					db.User.where('userName')
						.equals(userName)
						.find((err, arrObjs) ->
							if err?
								callback(err, false, 1)
								return
							if arrObjs? and arrObjs.length > 0
								callback(null, false, 2)
								return
							else
								user.save((err) ->
									if err?
										callback(err, false, 3)
									else
										callback(null, true, 0)
								)
							
						)
				)
		
	###
	Retrieves the associate user account for a secure token.
	@param token [String] A hexadecimal string representing a secure token.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthUserFromTokenCallback} method.
	###
	userFromToken: (token, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) ->
						
						if err?
							callback(err, null)
							return
						if not tk?
							callback(true, null)
							return
						
						callback(null, tk.user)
			
					)
	###
	Determines if the currently authenticated user is in the given role.
	@param token [String] A hexadecimal string representing a secure token.
	@param roleName [String] The name of the role. 
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthIsInRoleCallback} method.
	###
	isInRole: (token, roleName, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) -> 
						
						if err?
							callback(err, false);
							return
							
						if not tk?
							callback(null, false);	
							return
						
						db.Role.where('roleName')
							.equals(roleName)
							.findOne((err, role) ->
								if err?
									callback(err, false)
									return
								
								if not role?
									callback(null, false)
									return
								
								bFound = false
								
								async.forEach(tk.user.roles, 
									(item, cb) ->
										if item.toString() == role._id.toString()
											bFound = true
										cb(null)
									, (err) ->
										callback(null, bFound)
								)
							)
					)
	###
	Determines if the currently authenticated user is in any of the listed roles.
	@param token [String] A hexadecimal string representing a secure token.
	@param roles [Array<String>] The array of roles for which to check for membership.
	@param callback [Function] A function meeting the requirements of the {Callbacks#userAuthIsInRoleCallback} method.
	###
	isInAnyRole: (token, roles, callback) ->
		db = QRefDatabase.instance()
		db.AuthToken.where('token')
					.equals(token)
					.populate('user')
					.findOne((err, tk) -> 
						
						if err?
							callback(err, false);
							return
							
						if not tk?
							callback(null, false);	
							return
							
						arrQueryEntries = []
						
						arrQueryEntries.push({ roleName: r }) for r in roles
						
						db.Role.find({ "$or": arrQueryEntries })
							.exec((err, arrRoles) ->
								if err?
									callback(err, false)
									return
								
								if arrRoles.length == 0
									callback(null, false)
									return
								
								bFound = false
								dctRoleKeys = new Dictionary()
								
								dctRoleKeys.set(r._id.toString(), r.roleName) for r in arrRoles
								
								
								async.forEach(tk.user.roles, 
									(item, cb) ->
										if dctRoleKeys.containsKey(item.toString())
											bFound = true
										cb(null)
									, (err) ->
										callback(err, bFound)
								)
							)
					)
module.exports = new UserAuth()<<<
Document event: offset: 10130, length: 0, timestamp: 1664
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:38.156
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 695, length: 1, timestamp: 1577
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:43.056
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 703, length: 1, timestamp: 1587
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:44.467
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (r)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 706, length: 0, timestamp: 1591
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:44.676
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (re)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 707, length: 0, timestamp: 1592
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:44.939
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (rec)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 708, length: 0, timestamp: 1593
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:45.092
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (reco)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 709, length: 0, timestamp: 1594
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:45.262
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (recor)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 710, length: 0, timestamp: 1595
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:45.522
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 711, length: 0, timestamp: 1596
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:45.932
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 712, length: 0, timestamp: 1597
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:46.171
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 713, length: 0, timestamp: 1598
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:46.571
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, c)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 714, length: 0, timestamp: 1599
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:46.825
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, ca)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 715, length: 0, timestamp: 1600
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:46.916
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, cal)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 716, length: 0, timestamp: 1601
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:47.091
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, call)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 717, length: 0, timestamp: 1602
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:47.343
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, callb)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 718, length: 0, timestamp: 1603
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:47.438
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, callba)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 719, length: 0, timestamp: 1604
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:47.741
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, callbac)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 720, length: 0, timestamp: 1605
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:47.868
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	filterRecord: (record, callback) ->
		callback(null, true, record)
	retrieve: (record, callback)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 721, length: 0, timestamp: 1606
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:54.887
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	
	retrieve: (record, callback)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 625, length: 67, timestamp: 1607
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:49:55.104
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)

	retrieve: (record, callback)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 624, length: 1, timestamp: 1608
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:03.029
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(n)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 669, length: 0, timestamp: 1623
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:03.239
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(nu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 670, length: 0, timestamp: 1624
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:03.440
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(nul)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 671, length: 0, timestamp: 1625
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:03.596
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 672, length: 0, timestamp: 1626
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:03.813
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 673, length: 0, timestamp: 1627
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:04.024
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 674, length: 0, timestamp: 1628
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:04.660
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 675, length: 0, timestamp: 1629
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:04.904
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, tr)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 676, length: 0, timestamp: 1630
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:05.018
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, tru)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 677, length: 0, timestamp: 1631
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:05.268
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 678, length: 0, timestamp: 1632
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:05.517
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 679, length: 0, timestamp: 1633
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:05.872
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true ,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 680, length: 0, timestamp: 1634
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:06.196
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 680, length: 1, timestamp: 1635
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:06.355
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 679, length: 1, timestamp: 1636
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:06.681
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 679, length: 0, timestamp: 1637
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:06.766
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 680, length: 0, timestamp: 1638
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:06.887
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, r)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 681, length: 0, timestamp: 1639
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:07.098
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, re)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 682, length: 0, timestamp: 1640
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:07.355
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, rec)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 683, length: 0, timestamp: 1641
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:07.430
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, reco)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 684, length: 0, timestamp: 1642
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:07.670
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, recor)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 685, length: 0, timestamp: 1643
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:07.934
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.filterRecord(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 686, length: 0, timestamp: 1644
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:11.058
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.r(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 325, length: 12, timestamp: 1645
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:11.330
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.re(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 326, length: 0, timestamp: 1646
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:11.661
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.ret(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 327, length: 0, timestamp: 1647
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:11.893
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retr(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 328, length: 0, timestamp: 1648
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:12.346
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retri(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 329, length: 0, timestamp: 1649
text:>i<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:12.531
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrie(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 330, length: 0, timestamp: 1650
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:12.687
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retriev(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 331, length: 0, timestamp: 1651
text:>v<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:12.806
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 332, length: 0, timestamp: 1652
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:16.471
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 687, length: 1, timestamp: 1654
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:22.172
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (c)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 696, length: 0, timestamp: 1664
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:22.441
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (ca)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 697, length: 0, timestamp: 1665
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:22.739
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (cal)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 698, length: 0, timestamp: 1666
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:22.744
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (call)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 699, length: 0, timestamp: 1667
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:23.038
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callb)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 700, length: 0, timestamp: 1668
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:23.263
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callba)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 701, length: 0, timestamp: 1669
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:23.526
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callbac)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 702, length: 0, timestamp: 1670
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:23.690
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 703, length: 0, timestamp: 1671
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:29.122
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(n)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 721, length: 0, timestamp: 1685
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:29.396
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(nu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 722, length: 0, timestamp: 1686
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:29.626
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(nul)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 723, length: 0, timestamp: 1687
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:29.789
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 724, length: 0, timestamp: 1688
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:30.047
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 725, length: 0, timestamp: 1689
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:30.440
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 726, length: 0, timestamp: 1690
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:30.872
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 727, length: 0, timestamp: 1691
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:31.846
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 728, length: 0, timestamp: 1692
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:32.008
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tur)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 729, length: 0, timestamp: 1693
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:32.317
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, ture)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 730, length: 0, timestamp: 1694
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:32.743
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tur)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 730, length: 1, timestamp: 1695
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:32.891
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 729, length: 1, timestamp: 1696
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:33.032
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 728, length: 1, timestamp: 1697
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:33.222
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tr)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 728, length: 0, timestamp: 1698
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:34.065
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 728, length: 1, timestamp: 1699
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:34.859
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tr)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 728, length: 0, timestamp: 1700
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:35.119
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, tru)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 729, length: 0, timestamp: 1701
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:35.357
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 730, length: 0, timestamp: 1702
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:37.020
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 735, length: 1, timestamp: 1704
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:40.465
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (r)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 744, length: 0, timestamp: 1714
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:40.700
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (re)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 745, length: 0, timestamp: 1715
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:40.935
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (rec)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 746, length: 0, timestamp: 1716
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:41.066
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (reco)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 747, length: 0, timestamp: 1717
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:41.259
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (recor)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 748, length: 0, timestamp: 1718
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:41.506
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 749, length: 0, timestamp: 1719
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:41.619
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 750, length: 0, timestamp: 1720
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:41.825
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 751, length: 0, timestamp: 1721
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:41.989
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, c)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 752, length: 0, timestamp: 1722
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:42.313
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, ca)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 753, length: 0, timestamp: 1723
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:42.406
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, cal)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 754, length: 0, timestamp: 1724
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:42.578
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, call)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 755, length: 0, timestamp: 1725
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:42.871
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callb)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 756, length: 0, timestamp: 1726
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:43.023
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callba)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 757, length: 0, timestamp: 1727
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:43.319
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callbac)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 758, length: 0, timestamp: 1728
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:43.499
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 759, length: 0, timestamp: 1729
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:53.405
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(n)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 777, length: 0, timestamp: 1743
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:53.701
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(nu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 778, length: 0, timestamp: 1744
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:53.933
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(nul)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 779, length: 0, timestamp: 1745
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:54.085
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 780, length: 0, timestamp: 1746
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:54.344
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 781, length: 0, timestamp: 1747
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:54.547
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 782, length: 0, timestamp: 1748
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:54.889
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 783, length: 0, timestamp: 1749
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:55.084
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, tr)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 784, length: 0, timestamp: 1750
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:55.208
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, tru)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 785, length: 0, timestamp: 1751
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:55.385
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 786, length: 0, timestamp: 1752
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:58.331
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 787, length: 0, timestamp: 1753
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:58.465
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 788, length: 0, timestamp: 1754
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:58.806
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, r)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 789, length: 0, timestamp: 1755
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:59.066
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, re)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 790, length: 0, timestamp: 1756
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:59.333
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, rec)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 791, length: 0, timestamp: 1757
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:59.471
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, reco)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 792, length: 0, timestamp: 1758
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:59.624
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, recor)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 793, length: 0, timestamp: 1759
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:50:59.868
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 794, length: 0, timestamp: 1760
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:02.478
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 799, length: 1, timestamp: 1762
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:05.069
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (r)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 808, length: 0, timestamp: 1772
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:05.274
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (re)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 809, length: 0, timestamp: 1773
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:05.514
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (rec)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 810, length: 0, timestamp: 1774
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:05.623
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (reco)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 811, length: 0, timestamp: 1775
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:05.798
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (recor)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 812, length: 0, timestamp: 1776
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:06.054
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 813, length: 0, timestamp: 1777
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:06.218
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 814, length: 0, timestamp: 1778
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:06.411
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 815, length: 0, timestamp: 1779
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:06.572
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, c)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 816, length: 0, timestamp: 1780
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:06.839
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, ca)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 817, length: 0, timestamp: 1781
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:06.935
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, cal)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 818, length: 0, timestamp: 1782
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:07.081
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, call)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 819, length: 0, timestamp: 1783
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:07.322
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callb)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 820, length: 0, timestamp: 1784
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:07.431
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callba)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 821, length: 0, timestamp: 1785
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:07.685
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callbac)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 822, length: 0, timestamp: 1786
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:07.796
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 823, length: 0, timestamp: 1787
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:13.551
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(n)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 841, length: 0, timestamp: 1801
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:13.809
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(nu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 842, length: 0, timestamp: 1802
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:13.999
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(nul)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 843, length: 0, timestamp: 1803
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:14.143
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 844, length: 0, timestamp: 1804
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:14.400
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 845, length: 0, timestamp: 1805
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:14.754
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 846, length: 0, timestamp: 1806
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:14.967
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 847, length: 0, timestamp: 1807
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:15.205
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, tu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 848, length: 0, timestamp: 1808
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:15.334
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, tur)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 849, length: 0, timestamp: 1809
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:15.584
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, ture)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 850, length: 0, timestamp: 1810
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:16.399
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, tur)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 850, length: 1, timestamp: 1811
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:16.554
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, tu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 849, length: 1, timestamp: 1812
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:16.700
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, t)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 848, length: 1, timestamp: 1813
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:16.821
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, tr)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 848, length: 0, timestamp: 1814
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:17.552
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, tru)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 849, length: 0, timestamp: 1815
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:17.671
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 850, length: 0, timestamp: 1816
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:17.951
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 851, length: 0, timestamp: 1817
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:18.139
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 852, length: 0, timestamp: 1818
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:18.422
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, r)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 853, length: 0, timestamp: 1819
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:18.659
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, re)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 854, length: 0, timestamp: 1820
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:18.923
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, rec)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 855, length: 0, timestamp: 1821
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:19.031
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, reco)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 856, length: 0, timestamp: 1822
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:19.194
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, recor)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 857, length: 0, timestamp: 1823
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:51:19.442
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 858, length: 0, timestamp: 1824
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:53:37.635
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
class AircraftChecklistFilter extends RecordFilter
	constructor: (t)<<<
Document event: offset: 110, length: 0, timestamp: 107
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:53:37.744
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
class AircraftChecklistFilter extends RecordFilter
	constructor: (to)<<<
Document event: offset: 111, length: 0, timestamp: 108
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:53:37.967
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
class AircraftChecklistFilter extends RecordFilter
	constructor: (tok)<<<
Document event: offset: 112, length: 0, timestamp: 109
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:53:38.118
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
class AircraftChecklistFilter extends RecordFilter
	constructor: (toke)<<<
Document event: offset: 113, length: 0, timestamp: 110
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:53:38.240
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token)<<<
Document event: offset: 114, length: 0, timestamp: 111
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:53:44.430
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	<<<
Document event: offset: 137, length: 1, timestamp: 128
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:55:21.399
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = requi
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 56, length: 1, timestamp: 145
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:55:22.707
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 59, length: 0, timestamp: 149
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:55:59.134
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		a
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 198, length: 28, timestamp: 155
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:03.973
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 211, length: 0, timestamp: 168
text:>
			
		<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:05.945
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				
			]
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 217, length: 0, timestamp: 170
text:>
				
			<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:15.060
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(c)
			]
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 224, length: 0, timestamp: 172
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:15.271
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb)
			]
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 225, length: 0, timestamp: 173
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:22.518
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) ->
					
			],
			(e)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 250, length: 0, timestamp: 181
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:22.766
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) ->
					
			],
			(er)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 251, length: 0, timestamp: 182
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:22.937
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) ->
					
			],
			(err)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 252, length: 0, timestamp: 183
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:44.809
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) >
					if @
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 228, length: 1, timestamp: 192
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:46.463
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if @
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 228, length: 0, timestamp: 193
text:>=<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:51.243
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if @user
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 245, length: 1, timestamp: 199
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:54.267
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if n@user?
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 240, length: 0, timestamp: 201
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:54.445
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if no@user?
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 241, length: 0, timestamp: 202
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:54.625
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not@user?
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 242, length: 0, timestamp: 203
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:56:54.905
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user?
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 243, length: 0, timestamp: 204
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:09.040
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(c)
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 283, length: 0, timestamp: 231
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:09.244
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 284, length: 0, timestamp: 232
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:15.042
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 293, length: 1, timestamp: 234
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:18.289
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(n)
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 308, length: 0, timestamp: 243
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:18.524
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(nu)
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 309, length: 0, timestamp: 244
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:18.726
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(nul)
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 310, length: 0, timestamp: 245
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:18.892
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 311, length: 0, timestamp: 246
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:26.235
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
					
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 320, length: 1, timestamp: 248
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:26.488
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 319, length: 1, timestamp: 249
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:30.448
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(c)
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 321, length: 0, timestamp: 253
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:57:30.679
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb)
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 322, length: 0, timestamp: 254
text:>b<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:12.687
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 359, length: 1, timestamp: 282
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:13.013
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					i
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 358, length: 1, timestamp: 283
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:13.194
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 357, length: 1, timestamp: 284
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:34.327
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 936, length: 1, timestamp: 1827
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:38.219
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (r)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 947, length: 0, timestamp: 1839
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:38.396
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (ro)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 948, length: 0, timestamp: 1840
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:38.639
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (rol)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 949, length: 0, timestamp: 1841
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:38.706
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (role)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 950, length: 0, timestamp: 1842
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:39.131
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleN)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 951, length: 0, timestamp: 1843
text:>N<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:39.325
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleNa)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 952, length: 0, timestamp: 1844
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:39.428
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleNam)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 953, length: 0, timestamp: 1845
text:>m<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:58:39.594
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName)
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 954, length: 0, timestamp: 1846
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 15:59:26.677
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if no
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
		<<<
Document event: offset: 968, length: 1, timestamp: 1917
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:00:05.498
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('')
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 371, length: 0, timestamp: 299
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:00:50.414
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canT
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 421, length: 1, timestamp: 345
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:00:50.561
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						can
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 420, length: 1, timestamp: 346
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:00:55.168
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 442, length: 1, timestamp: 363
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:04.991
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('')
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 461, length: 0, timestamp: 383
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:35.415
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						c
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 513, length: 1, timestamp: 435
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:36.852
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						can
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 515, length: 1, timestamp: 439
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:45.636
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 537, length: 1, timestamp: 456
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:48.839
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canR
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 554, length: 1, timestamp: 468
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:51.471
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve =
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 563, length: 1, timestamp: 479
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:53.339
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = fasl
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 568, length: 1, timestamp: 486
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:53.502
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = fas
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 567, length: 1, timestamp: 487
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:01:53.628
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = fa
				
			],
			(err) ->
				
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 566, length: 1, timestamp: 488
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:04.352
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(e)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 610, length: 0, timestamp: 501
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:04.638
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(er)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 611, length: 0, timestamp: 502
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:04.764
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 612, length: 0, timestamp: 503
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:04.923
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err,)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 613, length: 0, timestamp: 504
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:05.138
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, )
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 614, length: 0, timestamp: 505
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:05.337
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, c)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 615, length: 0, timestamp: 506
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:05.586
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, ca)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 616, length: 0, timestamp: 507
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:05.699
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, can)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 617, length: 0, timestamp: 508
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:06.220
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canR)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 618, length: 0, timestamp: 509
text:>R<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:06.568
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRe)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 619, length: 0, timestamp: 510
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:06.791
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRet)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 620, length: 0, timestamp: 511
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:07.722
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetr)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 621, length: 0, timestamp: 512
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:07.922
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetri)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 622, length: 0, timestamp: 513
text:>i<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:08.092
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrie)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 623, length: 0, timestamp: 514
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:08.240
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetriev)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 624, length: 0, timestamp: 515
text:>v<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:02:08.344
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 625, length: 0, timestamp: 516
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:13:49.721
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 660, length: 20, timestamp: 517
text:>canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:13:59.911
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		c = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 660, length: 11, timestamp: 519
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:00.167
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		ca = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 661, length: 0, timestamp: 520
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:00.293
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		can = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 662, length: 0, timestamp: 521
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:00.634
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canC = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 663, length: 0, timestamp: 522
text:>C<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:00.805
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCr = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 664, length: 0, timestamp: 523
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:00.932
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCre = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 665, length: 0, timestamp: 524
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:01.157
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCrea = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 666, length: 0, timestamp: 525
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:01.252
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreat = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 667, length: 0, timestamp: 526
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:01.406
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 668, length: 0, timestamp: 527
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:06.066
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 856, length: 11, timestamp: 528
text:>canCreate<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:08.991
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
				
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 878, length: 89, timestamp: 529
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:09.498
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
			
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 877, length: 1, timestamp: 530
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:09.702
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
		
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 876, length: 1, timestamp: 531
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:09.921
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
	
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 875, length: 1, timestamp: 532
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:10.156
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true

					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 874, length: 1, timestamp: 533
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:12.030
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 892, length: 11, timestamp: 535
text:>canCreate<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:15.152
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 955, length: 11, timestamp: 536
text:>canCreate<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:14:32.129
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1006, length: 28, timestamp: 537
text:>canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:05.282
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canCreat = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1014, length: 1, timestamp: 538
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:05.437
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canCrea = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1013, length: 1, timestamp: 539
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:05.569
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canCre = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1012, length: 1, timestamp: 540
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:05.755
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canCr = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1011, length: 1, timestamp: 541
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:05.908
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canC = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1010, length: 1, timestamp: 542
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:06.084
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		can = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1009, length: 1, timestamp: 543
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:06.699
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canU = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1009, length: 0, timestamp: 544
text:>U<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:06.782
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUp = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1010, length: 0, timestamp: 545
text:>p<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:06.916
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpd = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1011, length: 0, timestamp: 546
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:07.151
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpda = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1012, length: 0, timestamp: 547
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:07.273
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdat = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1013, length: 0, timestamp: 548
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:07.421
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1014, length: 0, timestamp: 549
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:12.406
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1202, length: 9, timestamp: 550
text:>canUpdate<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:13.859
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else 
						canUpdate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1238, length: 9, timestamp: 551
text:>canUpdate<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:16.005
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					
					else 
						canUpdate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1225, length: 1, timestamp: 553
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:15:21.037
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('')
					else 
						canUpdate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1244, length: 0, timestamp: 573
text:>''<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:08.191
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb()
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1360, length: 0, timestamp: 641
text:>	<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:09.396
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(n)
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1364, length: 0, timestamp: 642
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:09.643
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(nu)
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1365, length: 0, timestamp: 643
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:09.830
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(nul)
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1366, length: 0, timestamp: 644
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:09.984
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
				
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 1367, length: 0, timestamp: 645
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:28.610
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
					
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		callback(null, true, record)<<<
Document event: offset: 576, length: 1, timestamp: 650
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:46.381
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	delete: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1500, length: 28, timestamp: 653
text:>canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:16:52.793
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1449, length: 9, timestamp: 654
text:>canUpdate<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:11.595
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		c = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1500, length: 9, timestamp: 655
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:11.844
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		ca = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1501, length: 0, timestamp: 656
text:>a<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:11.952
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		can = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1502, length: 0, timestamp: 657
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:12.273
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canD = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1503, length: 0, timestamp: 658
text:>D<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:12.530
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDe = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1504, length: 0, timestamp: 659
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:12.575
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDel = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1505, length: 0, timestamp: 660
text:>l<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:12.735
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDele = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1506, length: 0, timestamp: 661
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:12.864
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelet = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1507, length: 0, timestamp: 662
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:12.990
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1508, length: 0, timestamp: 663
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:16.879
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1696, length: 9, timestamp: 664
text:>canDelete<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:17.878
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1789, length: 9, timestamp: 665
text:>canDelete<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:18.755
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canCreate)<<<
Document event: offset: 1825, length: 9, timestamp: 666
text:>canDelete<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:19.866
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)<<<
Document event: offset: 1903, length: 9, timestamp: 667
text:>canDelete<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:37.070
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
			
				)<<<
Document event: offset: 1918, length: 1, timestamp: 669
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:37.848
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		
				)<<<
Document event: offset: 1917, length: 1, timestamp: 670
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:42.705
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)
				<<<
Document event: offset: 1924, length: 1, timestamp: 672
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:42.870
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)
			<<<
Document event: offset: 1923, length: 1, timestamp: 673
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:43.025
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)
		<<<
Document event: offset: 1922, length: 1, timestamp: 674
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:43.176
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)
	<<<
Document event: offset: 1921, length: 1, timestamp: 675
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:17:43.337
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)
<<<
Document event: offset: 1920, length: 1, timestamp: 676
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:02.629
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve,)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 649, length: 0, timestamp: 678
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:02.775
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, )
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 650, length: 0, timestamp: 679
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:03.044
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, r)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 651, length: 0, timestamp: 680
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:03.253
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, re)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 652, length: 0, timestamp: 681
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:03.527
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, rec)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 653, length: 0, timestamp: 682
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:03.693
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, reco)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 654, length: 0, timestamp: 683
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:03.832
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, recor)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 655, length: 0, timestamp: 684
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:04.047
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 656, length: 0, timestamp: 685
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:30.975
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate,)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1466, length: 0, timestamp: 686
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:31.046
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, )
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1467, length: 0, timestamp: 687
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:31.354
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, r)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1468, length: 0, timestamp: 688
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:31.666
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, re)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1469, length: 0, timestamp: 689
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:31.881
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, rec)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1470, length: 0, timestamp: 690
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:32.047
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, reco)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1471, length: 0, timestamp: 691
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:32.209
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, recor)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1472, length: 0, timestamp: 692
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:32.422
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete)
		)<<<
Document event: offset: 1473, length: 0, timestamp: 693
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:35.670
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete,)
		)<<<
Document event: offset: 1928, length: 0, timestamp: 694
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:35.780
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, )
		)<<<
Document event: offset: 1929, length: 0, timestamp: 695
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:36.014
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, r)
		)<<<
Document event: offset: 1930, length: 0, timestamp: 696
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:36.186
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, re)
		)<<<
Document event: offset: 1931, length: 0, timestamp: 697
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:36.448
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, rec)
		)<<<
Document event: offset: 1932, length: 0, timestamp: 698
text:>c<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:36.622
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, reco)
		)<<<
Document event: offset: 1933, length: 0, timestamp: 699
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:36.754
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, recor)
		)<<<
Document event: offset: 1934, length: 0, timestamp: 700
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:22:36.982
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, record)
		)<<<
Document event: offset: 1935, length: 0, timestamp: 701
text:>d<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:44:55.095
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
	<<<
Document event: offset: 1886, length: 1, timestamp: 1940
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:44:55.278
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
<<<
Document event: offset: 1885, length: 1, timestamp: 1941
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:45:02.266
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFli<<<
Document event: offset: 1911, length: 1, timestamp: 1969
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:45:02.421
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFl<<<
Document event: offset: 1910, length: 1, timestamp: 1970
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:45:02.566
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordF<<<
Document event: offset: 1909, length: 1, timestamp: 1971
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:45:10.366
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id and record.isDeleted == false
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, record)
		)
	<<<
Document event: offset: 1975, length: 1, timestamp: 741
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:45:10.649
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>RecordFilter = require('../RecordFilter')
async = require('async')
class AircraftChecklistFilter extends RecordFilter
	constructor: (token) ->
		super token
	retrieve: (record, callback) ->
		canRetrieve = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators') and not record.user?
						canRetrieve = true
					else if @.isInRole('Users') and record.user == @.getUser()._id and record.isDeleted == false
						canRetrieve = true
					else 
						canRetrieve = false
						
					cb(null)
				
			],
			(err) ->
				callback(err, canRetrieve, record)
		)
	create: (callback) ->
		canCreate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canCreate = true
					else 
						canCreate = false
						
					cb(null)
			],
			(err) ->
				callback(err, canCreate)
		)
	update: (record, callback) ->
		canUpdate = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canUpdate = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canUpdate = true
					else 
						canUpdate = false
				
					cb(null)
			],
			(err) ->
				callback(err, canUpdate, record)
		)
	delete: (record, callback) ->
		canDelete = false
		async.series(
			[
				(cb) =>
					if not @user? or not @roles?
						@.resolve(cb)
					else
						cb(null)
				,(cb) =>
					if @.isInRole('Administrators')
						canDelete = true
					else if @.isInRole('Users') and record.user == @.getUser()._id
						canDelete = true
					else 
						canDelete = false
				
					cb(null)
			],
			(err) ->
				callback(err, canDelete, record)
		)
<<<
Document event: offset: 1974, length: 1, timestamp: 742
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:52.039
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new Airr
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1299, length: 1, timestamp: 21
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:52.247
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new Air
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1298, length: 1, timestamp: 22
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:57.946
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new AircraftChecklistFilter(t)
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1319, length: 0, timestamp: 44
text:>t<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:58.134
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new AircraftChecklistFilter(to)
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1320, length: 0, timestamp: 45
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:58.391
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new AircraftChecklistFilter(tok)
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1321, length: 0, timestamp: 46
text:>k<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:58.539
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new AircraftChecklistFilter(toke)
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1322, length: 0, timestamp: 47
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:54:58.660
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../db/QRefDatabase')
ChecklistManager = require('../../../../db/manager/ChecklistManager')
###
Service route that allows the retrieval of all checklists and the creation of new checklists.
@example Service Methods (see {CreateAircraftChecklistAjaxRequest})
  Request Format: application/json
  Response Format: application/json
  
  GET /services/ajax/aircraft/checklists?token=:token
    :token - (Required) A valid authentication token.
    
  Retrieves all checklists.
  
  POST /services/ajax/aircraft/checklists
  	@BODY - (Required) CreateAircraftChecklistAjaxRequest
  	
  Creates a new checklist.
@author Nathan Klick
@copyright QRef 2012
###
class AircraftChecklistsRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/checklists' }, { method: 'GET', path: '/checklists' }]
	get: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		mgr = new ChecklistManager()
		token = req.param('token')
		filter = new AircraftChecklistFilter(token)
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
			
			UserAuth.userFromToken(token, (err, user) ->
				if err?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				if not user?
					resp = new AjaxResponse()
					resp.failure('Not Authorized', 403)
					res.json(resp, 200)
					return
				
				query = db.AircraftChecklist.find()
				query.where('isDeleted', false)
				query.where('user', user._id)
			
				if req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * req.query.pageSize).limit(req.query.pageSize)
				else if req.query?.pageSize? and not req.query?.page?
					query = query.limit(req.query.pageSize)
				else if not req.query?.pageSize? and req.query?.page?
					query = query.skip(req.query.page * 25).limit(25)
				
				query.exec((err, arrObjs) ->
					if err?
						resp = new AjaxResponse()
						resp.failure('Internal Error', 500)
						res.json(resp, 200)
						return
						
					db.AircraftChecklist.count((err, count) ->
						if err?
							resp = new AjaxResponse()
							resp.failure('Internal Error', 500)
							res.json(resp, 200)
							return
						
						#console.log('Expanding records.')
						mgr.expandAll(arrObjs, (err, arrCheckLists) ->
							if err?
								resp = new AjaxResponse()
								resp.failure('Internal Error', 500)
								res.json(resp, 200)
								return
								
							#console.log('Returning expanded records.')
							resp = new AjaxResponse()
							resp.addRecords(arrCheckLists)
							resp.setTotal(count)
							res.json(resp, 200)
						)
						
					)
					
				)
			)
			# Validate Admin Only Access
			
			
		)
	post: (req, res) =>
		if not @.isValidRequest(req)
			resp = new AjaxResponse()
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
		db = QRefDatabase.instance()
		token = req.param('token')
		
		UserAuth.validateToken(token, (err, isTokenValid) ->
			if err? or not isTokenValid == true
				resp = new AjaxResponse()
				resp.failure('Not Authorized', 403)
				res.json(resp, 200)
				return
				
			# Validate Permissions Here
			
			newObj = new db.AircraftChecklist()
	
			newObj.manufacturer = req.body.manufacturer
			newObj.model = req.body.model
			newObj.preflight = req.body.preflight
			newObj.takeoff = req.body.takeoff
			newObj.landing = req.body.landing
			newObj.emergencies = req.body.emergenices
			#newObj.modelYear = req.body.modelYear
			
			if req.body?.tailNumber?
				newObj.tailNumber = req.body.tailNumber
				
			if req.body?.index?
				newObj.index = req.body.index
				
			if req.body?.user?
				newObj.user = req.body.user
			
			if req.body?.version?
				newObj.version = req.body.version
			else 
				newObj.version = 1
			
			if req.body?.productIcon?
				newObj.productIcon = req.body.productIcon
			
			#if req.body?.coverImage?
			#	newObj.coverImage = req.body.coverImage
			
			newObj.save((err) ->
				if err?
					resp = new AjaxResponse()
					resp.failure(err, 500)
					res.json(resp, 200)
					return
				
				resp = new AjaxResponse()
				resp.setTotal(1)
				resp.addRecord(newObj)
				res.json(resp, 200)
			)
			
		)
		

	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or
			  (req.body? and req.body?.token? and req.body?.model? and  
			 	req.body?.manufacturer? and req.body?.preflight? and req.body?.takeoff? and
			 	req.body?.landing? and req.body?.emergencies? and
			 	req.body?.mode? and req.body.mode == 'ajax')
			true
		else
			false 
	
module.exports = new AircraftChecklistsRoute()<<<
Document event: offset: 1323, length: 0, timestamp: 48
text:>n<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:19.324
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 863, length: 1, timestamp: 1978
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:25.624
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (q)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 880, length: 0, timestamp: 1996
text:>q<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:25.848
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (qu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 881, length: 0, timestamp: 1997
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:26.020
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (que)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 882, length: 0, timestamp: 1998
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:26.209
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (quer)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 883, length: 0, timestamp: 1999
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:26.334
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (query)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 884, length: 0, timestamp: 2000
text:>y<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:27.984
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (quer)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 884, length: 1, timestamp: 2001
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:28.139
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (que)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 883, length: 1, timestamp: 2002
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:28.313
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (qu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 882, length: 1, timestamp: 2003
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:28.480
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (q)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 881, length: 1, timestamp: 2004
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:28.829
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: ()
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 880, length: 1, timestamp: 2005
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:29.165
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (o)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 880, length: 0, timestamp: 2006
text:>o<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:29.594
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQ)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 881, length: 0, timestamp: 2007
text:>Q<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:29.865
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 882, length: 0, timestamp: 2008
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:29.996
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQue)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 883, length: 0, timestamp: 2009
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:30.213
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuer)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 884, length: 0, timestamp: 2010
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:30.309
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuery)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 885, length: 0, timestamp: 2011
text:>y<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:30.790
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuery,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 886, length: 0, timestamp: 2012
text:>,<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:30.971
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuery, )
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 887, length: 0, timestamp: 2013
text:> <



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:31.994
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuery,)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 887, length: 1, timestamp: 2014
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:32.158
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuery)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 886, length: 1, timestamp: 2015
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:32.327
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQuer)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 885, length: 1, timestamp: 2016
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:32.486
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQue)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 884, length: 1, timestamp: 2017
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:32.656
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 883, length: 1, timestamp: 2018
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:32.829
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (oQ)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 882, length: 1, timestamp: 2019
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:32.991
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (o)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 881, length: 1, timestamp: 2020
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:33.271
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: ()
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 880, length: 1, timestamp: 2021
text:><



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:33.569
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (q)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 880, length: 0, timestamp: 2022
text:>q<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:33.804
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (qu)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 881, length: 0, timestamp: 2023
text:>u<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:33.968
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (que)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 882, length: 0, timestamp: 2024
text:>e<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:34.270
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (quer)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 883, length: 0, timestamp: 2025
text:>r<



!ENTRY org.apache.log4j 4 0 2012-09-20 16:57:34.499
!MESSAGE org.eclipse.xtext.ui.editor.model.DocumentPartitioner  - Detected unexpected state in document partitioner. Please file a bug with the following information attached:
Document content after the event was applied:
>>>mongoose = require('mongoose')
QRefDatabase = require('../db/QRefDatabase')
async = require('async')
class RecordFilter
	token: null
	user: null
	roles: null
	constructor: (token) ->
		@token = token
	filter: (arrRecords, callback) ->
		arrFilteredRecords = []
		async.forEach(arrRecords,
			(item, cb) =>
				@.retrieve(item, 
					(err, include, rec) ->
						if err?
							cb(err)
							return
						
						if include
							arrFilteredRecords.push(rec)
						
						cb(null)
				)
			,(err) ->
				if err?
					callback(err, [])
					return
				callback(null, arrFilteredRecords)
		)
	retrieve: (record, callback) ->
		callback(null, true, record)
	create: (callback) ->
		callback(null, true)
	update: (record, callback) ->
		callback(null, true, record)
	delete: (record, callback) ->
		callback(null, true, record)
	constrainQuery: (query)
	getToken: () -> @token
	getRoles: () -> @roles
	getUser: () -> @user
	isInRole: (roleName) ->
		if not @roles
			return false
			
		return true for r in @roles when r is roleName
		return false
	resolve: (callback) ->
		db = QRefDatabase.instance()
		@roles = []		
		db.AuthToken.where('token')
				.equals(@token)
				.populate('user')
				.findOne((err, tk) =>
					if err?
						callback(err)
						return
					
					if not tk?
						callback(new Error('Token not found'))
						return
					
					@user = tk.user
					
					async.forEach(tk.user.roles, 
						(item, cb) ->
							db.Role.findById(item, 
								(err, role) ->
									if err?
										cb(err)
										return
									
									if not role?
										cb(new Error('Role not found'))
										return
										
									@roles.push(role.roleName)
									cb(null)
							)
						,(err) ->
							if err?
								callback(err)
								return
								
							callback(null)
					)						
					
				)
module.exports = RecordFilter<<<
Document event: offset: 884, length: 0, timestamp: 2026
text:>y<


