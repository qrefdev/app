AjaxRoute = require('../../../AjaxRoute')
AjaxResponse = require('../../../../serialization/AjaxResponse')
UserAuth = require('../../../../security/UserAuth')
QRefDatabase = require('../../../../../db/QRefDatabase')
class AircraftManufacturersRoute extends AjaxRoute
	constructor: () ->
		super [{ method: 'POST', path: '/manufacturers' }, { method: 'GET', path: '/manufacturers' }]
	get: (req, res) ->
		if not @.isValidRequest(req)
			resp = new RpcResponse(null)
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
		
	post: (req, res) ->
		if not @.isValidRequest(req)
			resp = new RpcResponse(null)
			resp.failure('Bad Request', 400)
			res.json(resp, 200)
			return
	isValidRequest: (req) ->
		if (req.query? and req.query?.token?) or (req.body? and req.body?.token?)
			true
		else
			false 
	
module.exports = new AircraftManufacturersRoute()